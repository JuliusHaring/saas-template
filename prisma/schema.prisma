generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model User {
  id    String @id @unique
  email String

  subscriptionId String?       @unique
  Subscription   Subscription? @relation(fields: [subscriptionId], references: [userId])
  usageId        String?       @unique
  Usage          Usage?        @relation(fields: [usageId], references: [userId])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  ChatBot   ChatBot[]
}

enum SubscriptionTier {
  BASIC
  PRO
  ENTERPRISE
}

model Subscription {
  userId         String           @unique
  subscriptionId String           @id @unique
  customerId     String
  tier           SubscriptionTier
  createdAt      DateTime         @default(now())
  expiresAt      DateTime?
  User           User?
}

model Usage {
  userId       String   @id @unique
  chatMessages Int      @default(0)
  fileCount    Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  User         User?
}

model ChatBot {
  userId String @unique
  User   User   @relation(fields: [userId], references: [id])

  id            String         @id @default(dbgenerated("gen_random_uuid()"))
  GDriveSource  GDriveSource?
  WebsiteSource WebsiteSource?
  Documents     Document[]
  Style         Style?

  instructions String?
  name         String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GDriveSource {
  id        String  @id @default(dbgenerated("gen_random_uuid()"))
  chatBotId String  @unique
  ChatBot   ChatBot @relation(fields: [chatBotId], references: [id])

  apiKey String
}

model WebsiteSource {
  id        String  @id @default(dbgenerated("gen_random_uuid()"))
  chatBotId String  @unique
  ChatBot   ChatBot @relation(fields: [chatBotId], references: [id])

  url            String
  url_exceptions String[]
}

model Document {
  id        String  @id @default(dbgenerated("gen_random_uuid()"))
  chatBotId String
  ChatBot   ChatBot @relation(fields: [chatBotId], references: [id])

  name      String
  content   String
  vector    Unsupported("vector(1536)")?
  createdAt DateTime                     @default(now())
}

model Style {
  id        String  @id @default(dbgenerated("gen_random_uuid()"))
  chatBotId String  @unique
  ChatBot   ChatBot @relation(fields: [chatBotId], references: [id])

  css String
}
